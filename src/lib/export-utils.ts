
interface ProgressData {
  userName: string;
  totalHours: number;
  streakDays: number;
  lessonsCompleted: number;
  projectsStarted: number;
  lastActivityDate?: string;
}

export function exportProgressReport(data: ProgressData): void {
  const reportContent = `
# DevAI Learning Progress Report
**Generated on:** ${new Date().toLocaleDateString()}

## Student Information
- **Name:** ${data.userName}
- **Last Activity:** ${data.lastActivityDate ? new Date(data.lastActivityDate).toLocaleDateString() : 'No recent activity'}

## Learning Progress
- **Study Hours:** ${data.totalHours} hours total
- **Current Streak:** ${data.streakDays} consecutive days
- **Lessons Completed:** ${data.lessonsCompleted}
- **Projects Started:** ${data.projectsStarted}

## Performance Summary
${data.streakDays > 7 ? '🔥 Excellent consistency! Keep up the great work.' : '📈 Building momentum - aim for longer study streaks.'}
${data.totalHours > 20 ? '⭐ Great dedication to learning!' : '💪 Keep investing time in your growth.'}

---
*Generated by DevAI Learning Platform*
  `.trim();

  const blob = new Blob([reportContent], { type: 'text/markdown' });
  const url = URL.createObjectURL(blob);
  const link = document.createElement('a');
  link.href = url;
  link.download = `devai-progress-report-${new Date().toISOString().split('T')[0]}.md`;
  document.body.appendChild(link);
  link.click();
  document.body.removeChild(link);
  URL.revokeObjectURL(url);
}

export function exportProgressCSV(data: ProgressData): void {
  const csvContent = [
    ['Metric', 'Value', 'Date'],
    ['Student Name', data.userName, new Date().toISOString()],
    ['Total Study Hours', data.totalHours.toString(), ''],
    ['Current Streak Days', data.streakDays.toString(), ''],
    ['Lessons Completed', data.lessonsCompleted.toString(), ''],
    ['Projects Started', data.projectsStarted.toString(), ''],
    ['Last Activity', data.lastActivityDate || 'No recent activity', ''],
    ['Report Generated', new Date().toLocaleDateString(), new Date().toISOString()]
  ].map(row => row.map(cell => `"${cell}"`).join(',')).join('\n');

  const blob = new Blob([csvContent], { type: 'text/csv' });
  const url = URL.createObjectURL(blob);
  const link = document.createElement('a');
  link.href = url;
  link.download = `devai-progress-data-${new Date().toISOString().split('T')[0]}.csv`;
  document.body.appendChild(link);
  link.click();
  document.body.removeChild(link);
  URL.revokeObjectURL(url);
}
